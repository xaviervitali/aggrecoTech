

    {% set months = (attendances | map(a=>a.createdAt |date("m/Y"))) | reduce(
        (unique, item) => item in unique ? unique : unique|merge([item]), []
    )%}
    <div class="attendancesMonthButtons d-flex justify-content-center flex-wrap">
        {% for month in months %}
            <button class="btn btn-info m-2" value="{{month}}">{{ month }}</button>
        {% endfor %}

    </div>

    <table class="table d-none table-bordered attendancesTable">
        <thead>
            <th scope="col">Date</th>
            <th scope="col">Heure</th>
            <th scope="col">Signature</th>
        </thead>
        <tbody>
        </tbody>
    </table>

{{ form_start(attendanceForm)}}
{{ form_widget(attendanceForm)}}
<button  class=" btn btn-sm btn-success">Valider</button>
{{ form_end(attendanceForm)}}


{% block moreJavascripts %}
    <script>
    {% if user is defined %}

        // Attendances
        let monthSelected = "";
        let signature = "";
        let monthButtons = document.querySelectorAll(".attendancesMonthButtons button");
        const table = document.querySelector(".attendancesTable");
        const tbody = document.querySelector(".attendancesTable tbody");
        const attendancePath = "{{path("admin_get_attendances")}}";

        // document.getElementById("users").addEventListener("change", (e) => {

        //   table.classList.add("d-none");

        //   signature = e.target.options[e.target.selectedIndex].dataset.signature;

        // });

        monthButtons.forEach((button) =>
        button.addEventListener("click", (b) => {
            monthSelected = b.target.value;
            const month = b.target.value.split("/").reverse().join("/");


            fetch(attendancePath + "?user=" + {{ user.id }} + "&month=" + month + "/01")
                .then((r) => r.json())

                .then((f) => {
                if (f.length > 0) {
                    table.classList.remove("d-none");
                    console.log(f.sort(function (a, b) {
  return new Date(a.date) - new Date(b.date);
}))
                    attendancesShow(f);
                } else {
                    // table.append = "<h3>Pas d'emargement à cette période</h3>";
                }
                });
        })
        );

        function attendancesShow(attendances) {
        const attendancesDate = attendances.map((a) => new Date(a.date));

        let dates = [
            ...new Set(
            attendancesDate.map((a) => {
                return a.getDate();
            })
            ),
        ].map((d) => {
            return {
            [d]: attendancesDate

                .filter((aa) => aa.getDate() === d)

                .map(
                (aaa) => aaa.getHours() + ":" + ("0" + aaa.getMinutes()).slice(-2)
                ),
            };
        });

        let html = "";

        dates.forEach(function (d) {
            let attendanceOfDay = Object.values(d).join().split(",");

            let alert = false;

            let deleted = "";

            if (attendanceOfDay.length % 2 != 0) {
            deleted = attendanceOfDay.pop();

            alert = true;
            }

            let minutes = attendanceOfDay

            .map((a) => a.split(":"))

            .map((b) => b[0] * 60 + parseInt(b[1]))

            .reverse()

            .reduce((accumulator, currentValue, currentIndex) => {
                if (currentIndex % 2 == 0) {
                return +accumulator + currentValue;
                } else {
                return +accumulator - currentValue;
                }
            }, 0);

            const hours = attendanceOfDay.join("</p><p>");

            const signatures = [];

            for (let i = 0; i < attendanceOfDay.length; i++) {
            signatures.push("<img src='" + signature + "'>");
            }

            html += `<tr><td ><h2>${Object.keys(d) + "/" + monthSelected}</h2>

            ${
            alert
                ? "<p class='text-danger d-block'> /!\\ Attention l'emargement de " +
                deleted +
                " à été retiré</p>"
                : ""
            }<p class="d-block">Temps de présence : <strong>${Math.floor(
            minutes / 60
            )}h${("0" + (minutes % 60)).slice(
            -2
            )}</strong></p></td><td ><p  >${hours}</p></td><td>${signatures.join(
            ""
            )}</td></tr>`;
        });

        tbody.innerHTML = html;
        }
    {% endif %}
</script>

{% endblock %}