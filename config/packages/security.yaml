security:

    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        App\Entity\User:
            algorithm: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            form_login:
                login_path: app_login
                check_path: app_login
                            guard:
                # Set as entry point the default authenticator of the application (LoginFormAuthenticator) to fix the issue
            entry_point: App\Security\LoginFormAuthenticator
                # In this example, we have 3 authenticators, one of our sf application
                # and 2 social authenticators, therefore we use LoginFormAuthenticator as the entry point
                authenticators:
                    - App\Security\LoginFormAuthenticator
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
         
               # where to redirect after logout
                target: public

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
